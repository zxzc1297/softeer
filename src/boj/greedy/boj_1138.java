package boj.greedy;
import java.util.*;

/**
 * 문제
 * N명의 사람들은 매일 아침 한 줄로 선다. 이 사람들은 자리를 마음대로 서지 못하고 오민식의 지시대로 선다.
 *
 * 어느 날 사람들은 오민식이 사람들이 줄 서는 위치를 기록해 놓는다는 것을 알았다. 그리고 아침에 자기가 기록해 놓은 것과 사람들이 줄을 선 위치가 맞는지 확인한다.
 *
 * 사람들은 자기보다 큰 사람이 왼쪽에 몇 명 있었는지만을 기억한다. N명의 사람이 있고, 사람들의 키는 1부터 N까지 모두 다르다.
 *
 * 각 사람들이 기억하는 정보가 주어질 때, 줄을 어떻게 서야 하는지 출력하는 프로그램을 작성하시오.
 *
 * 입력
 * 첫째 줄에 사람의 수 N이 주어진다. N은 10보다 작거나 같은 자연수이다. 둘째 줄에는 키가 1인 사람부터 차례대로 자기보다 키가 큰 사람이 왼쪽에 몇 명이 있었는지 주어진다. i번째 수는 0보다 크거나 같고, N-i보다 작거나 같다. i는 0부터 시작한다.
 *
 * 출력
 * 첫째 줄에 줄을 선 순서대로 키를 출력한다.
 *
 * 예제 입력 1
 * 4
 * 2 1 1 0
 * 예제 출력 1
 * 4 2 1 3
 * 예제 입력 2
 * 5
 * 0 0 0 0 0
 * 예제 출력 2
 * 1 2 3 4 5
 * 예제 입력 3
 * 6
 * 5 4 3 2 1 0
 * 예제 출력 3
 * 6 5 4 3 2 1
 */
public class boj_1138 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt();  // 사람 수
        int[] arr = new int[N]; // 왼쪽에 키 큰 사람이 몇 명 있는지 저장하는 배열
        int[] result = new int[N]; // 줄 서는 순서 배열

        for (int i = 0; i < N; i++) {
            arr[i] = sc.nextInt();
        }
        sc.close();

        // 키가 1부터 N까지인 사람들을 배치
        for (int i = 0; i < N; i++) {
            int count = arr[i]; // 왼쪽에 있어야 할 키 큰 사람 수
            for (int j = 0; j < N; j++) {
                if (count == 0 && result[j] == 0) {
                    // 현재 위치가 빈자리이고, 더 이상 왼쪽에 큰 사람이 필요 없으면 배치
                    result[j] = i + 1; // 키가 1부터 시작하므로 i+1 저장
                    break;
                }
                if (result[j] == 0) {
                    count--; // 빈자리 발견하면 count 감소
                }
            }
        }

        // 결과 출력
        for (int num : result) {
            System.out.print(num + " ");
        }
    }
}
